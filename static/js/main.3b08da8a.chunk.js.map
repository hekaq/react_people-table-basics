{"version":3,"sources":["components/PageNavLink.tsx","components/Navigation.tsx","components/Loader/Loader.tsx","api.ts","components/PersonInfo.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","cn","Navigation","role","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonInfo","person","personSlug","getParent","name","sex","born","died","motherName","fatherName","slug","isPersonSelected","mother","father","PeopleTable","people","useParams","parentName","parent","find","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","getPeopleFromServer","peopleFromServer","useEffect","noPeopleError","length","HomePage","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3b08da8a.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n  personSlug: string;\n  getParent: (parentName: string | null) => Person | undefined;\n}\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  personSlug,\n  getParent,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const isPersonSelected = personSlug === person.slug;\n\n  const mother = getParent(motherName);\n  const father = getParent(fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isPersonSelected })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({\n            'has-text-danger': sex === 'f',\n            'has-text-link': sex === 'm',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <Link\n              to={`/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </Link>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <Link\n              to={`/people/${father.slug}`}\n            >\n              {fatherName}\n            </Link>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonInfo } from './PersonInfo';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  const getParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (!parent) {\n      return undefined;\n    }\n\n    return parent;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            person={person}\n            key={person.slug}\n            personSlug={slug}\n            getParent={getParent}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const noPeopleError = !error && !people.length && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading && (<Loader />)}\n\n          {error\n          && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {noPeopleError\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n          {people.length !== 0 && (\n            <PeopleTable people={people} />\n          )}\n\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}